#!/usr/bin/env python3

import argparse
import os
import time
from hawks import Hawks, HawksSettings
from hawks_api import run_api
from subprocess import Popen, PIPE

hawks_settings = HawksSettings()

def add_arg(parser, name, **kwargs):
    if "help" not in kwargs:
        kwargs["help"] = hawks_settings.helptext.get(name)
    if "default" not in kwargs:
        kwargs["default"] = hawks_settings.get(name, "")
    if "type" not in kwargs:
        default_type = type(kwargs["default"])
        if default_type == bool:
            if kwargs["default"] == True:
                kwargs["action"] = "store_false"
            else:
                kwargs["action"] = "store_true"
        else:
            kwargs["type"] = default_type
    parser.add_argument("--" + name, **kwargs)

def parse_args():
    parser = argparse.ArgumentParser()
    for name, _ in (hs for hs in hawks_settings if hs[0] not in hawks_settings.read_only):
        add_arg(parser, name)
    parser.add_argument("--port", type=int, default="1212", help="TCP port number for the API and webui")
    parser.add_argument("--showip", action="store_true", default=False, help="display IP address on start")
    parser.add_argument("--noapi", action="store_true", default=False, help="prevent execution of a local webserver for the API and webui")

    args = parser.parse_args()

    args.p_cols = args.p_cols or args.cols
    args.p_rows = args.p_rows or args.rows

    return args

def whatismyip():
    proc = Popen("ip addr show dev $(netstat -nr |grep '^0.0.0.0 ' |awk '{print $NF}') |awk '/inet / {print $2}' |sed 's,/.*,,'", shell=True, stdout=PIPE, stderr=PIPE)
    stdout, stderr = proc.communicate()
    if proc.returncode == 0 and stdout:
        return str(stdout, encoding='utf-8').strip()
    return ""

def splitip(ip):
    octets = ip.split(".")
    return "{}.{}.\n{}.{}".format(*octets)

def main():
    args = parse_args()
    hawks_args = dict(args._get_kwargs())
    print(hawks_args)
    hawks_args.pop("port")
    hawks = Hawks(**hawks_args)
    myip = whatismyip()
    if myip and args.showip:
        hawks.settings.set("text", splitip(myip))
    hawks.show()
    hawks.settings.choices["font"] = [x.strip(".ttf") for x in os.listdir("/usr/share/fonts/truetype/freefont")]
    if args.noapi:
        while True:
            time.sleep(1000)
    else:
        print("Web UI at http://{}:{}/".format(myip or "0.0.0.0", args.port))
        run_api(myip, args.port, hawks)


if __name__ == "__main__":
    main()
